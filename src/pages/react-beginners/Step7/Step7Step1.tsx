import { Typography } from "@mui/material";

import { BackForwardButtons } from "../../../components/BackForwardButtons";

export const Step7Step1 = ({
  setActiveStep,
}: {
  setActiveStep: (step: number) => void;
}) => {
  return (
    <>
      <Typography>
        React.js - это библиотека для программирования, которая уже многие вещи
        решила за нас и мы можем сосредоточиться именно на написании того, что,
        когда и как будет отображаться.
      </Typography>
      <Typography>Примеры того, что она решила за нас:</Typography>
      <ol>
        <li>
          Когда на странице происходят какие-то изменения (появилось новое
          сообщение, текст (имя) превратилось в текстовое поле), эти изменения
          на самом деле довольно тяжелые. В React.js они происходят быстро и не
          съедают много ресурсов. React.js использует много оптимизаций для
          этого
        </li>
        <li>
          Нам не нужно вручную менять отображения, мы используем переменные и
          меняем их - React.js их сам подставляет и перерисовывает содержимое
          страницы. Код удобней понять и писать
        </li>
        <li>
          Безопасность - React.js предоставляет дополнительный уровень защиты,
          например, есть такая атака XSS, которая заключается в том, что
          злоумышленник может ввести в текстовое поле какой-нибудь скрипт и
          отправить его на сервер, где он может запуститься и, к примеру,
          украсть или модифицировать информацию о пользователях, или отправиться
          другим участникам и украть информацию из их браузеров. React.js
          изначально настроен так, что этот скрипт будет на сервер отправлен
          таким образом, что он не сможет запуститься
        </li>
      </ol>
      <Typography>
        Давайте сразу приступим к созданию проекта и создадим небольшое тестовое
        веб-приложение
      </Typography>
      <Typography>
        Мы используем Vite.js, который настроит все необходимое для разработки в
        React.js.
      </Typography>
      <Typography>Откроем терминал и введем следующую команду</Typography>
      <Typography>
        <code>npm init vite@latest</code>
      </Typography>
      <img
        src="/vite-create.gif"
        alt="Создание проекта с помощью Vite.js в терминале VS Code"
        style={{ width: "100%", maxWidth: 900 }}
      />
      <Typography>
        Выбрали TypeScript, потому что он сейчас везде используется и реально
        облегчает разработку - если передадим куда-нибудь переменную
        неподходящего типа, то сразу в IDE отобразится ошибка (не нужно будет
        искать, где проблема, если приложение упадет, что может занять довольно
        много времени)
      </Typography>
      <Typography>
        TypeScript - это язык, который расширяет JavaScript и дает ему новые
        возможности. Если вкратце - JavaScript не проверяет типы переменных, ему
        все равно, если вы забудете, что переменная должна быть числом и
        передадите туда объект, приложение просто тупо упадет с ошибкой
      </Typography>
      <Typography>Найдите и откройте ваш проект</Typography>
      <img
        src="/vite-open-project.png"
        alt={`VS Code с открытой вкладкой File в верхнем меню и наведенной на пункт "Open folder..."`}
        style={{ width: "100%", maxWidth: 400 }}
      />
      <Typography>Как-то так должно выглядеть</Typography>
      <img
        src="/vite-opened-project.png"
        alt="Открытый в VS Code проект"
        style={{ width: "100%", maxWidth: 900 }}
      />
      <BackForwardButtons onHandleForward={() => setActiveStep(1)} />
    </>
  );
};
